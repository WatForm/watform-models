/*******************************************************************************
 * Title: Mutex.dsh
 * Authors: Jose Serna - jserna@uwaterloo.ca
 * Created: 2018-06-20
 * Last modified: 
 * 2023-06-07 Nancy Day changes for newdash
 *
 * Notes: Semaphore basded mutual exclusion system
 *
 ******************************************************************************/

open util/boolean

state Mutex {
    semaphore_free: one Bool

    init {
        semaphore_free = True
    }

    conc Process1 {
        default state NonCritical {}
        state Critical {}
        state Wait {}

        trans wait {
            from NonCritical
            goto Wait
        }

        trans give_up {
            from Wait
            goto NonCritical
        }

        trans enter_critical_section{
            from Wait
            when semaphore_free = True
            goto Critical
            do semaphore_free' = False
        }

        trans exit_critical_section {
            from Critical
            when semaphore_free = False
            goto NonCritical
            do semaphore_free' = True
        }
    }

    conc Process2 {
        default state NonCritical {}
        state Critical {}
        state Wait {}

        trans wait {
            from NonCritical
            goto Wait
        }

        trans give_up {
            from Wait
            goto NonCritical
        }

        trans enter_critical_section{
            from Wait
            when semaphore_free = True
            goto Critical
            do semaphore_free' = False
        }

        trans exit_critical_section {
            from Critical
            when semaphore_free = False
            goto NonCritical
            do semaphore_free' = True
        }
    }
}




