/*

        
    // Wait for a decision from the Coordinator
    state Waiting {
        trans FinalizeCommit {
            when {
                (one response) and
                Commit in response // Decision to commit
            }



*/

fun is_a_next_state: set DshSnapshot {
    ex[ {s: DshSnapshot | boolean/isTrue[boolean/True] } ]
}

// make this about one particular client
// can't quantify this inside the property b/c it has to the same C for different moments in time

one sig C extends ClientID {}

pred ef_trans_Waiting {
    ctl_mc[
        imp_ctl[and_ctl[{ s : DshSnapshot | 
                (C -> Carousel_Client_Waiting) in s.dsh_conf1 and
                (one C.(s.Carousel_Client_response)) and
                (Commit in C.(s.Carousel_Client_response))
                 },
                is_a_next_state ],
                ef[{s: DshSnapshot | C -> Carousel_Client_Waiting_FinalizeCommit in s.dsh_taken1 }]
            ]
    ]
}

check {
    ef_trans_Waiting
}
for 
exactly 8 DshSnapshot,
exactly 4 bufIdx0,
exactly 4 bufIdx1,
exactly 4 ClientID,
exactly 4 CoordinatorID,
exactly 4 Key, 
exactly 4 PartLdrID,
exactly 4 Transaction, 
exactly 4 Value   
expect 0


/*

dashcli -t -m tcmc carousel.dsh
cat carousel-tcmc.als carousel-tcmc-trans-ef-Waiting.ver > carousel-tcmc-trans-ef-Waiting.als
time dashcli carousel-tcmc-trans-ef-Waiting.als

*/
