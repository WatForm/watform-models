/*
MIT License

Copyright (c) [2021] [Tamjid Hossain]

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE. */

open util/ordering[pid] as P0

conc state Counter {
event Tk0 {}
event Tk1 {}
event Done {}

	conc state [p : pid] Bit {
		default state Bit1 {
			from Bit1
			on Tk0
			goto Bit2
		}
	
		state Bit2 {
			from Bit2
			on Tk0
			goto Bit1
			p in P0/last() implies { send Tk1 }
			else { send Tk0[P0/next(p)] }
		}
	}
	
	conc state BitLast {
		default state Bit1 {
			from Bit1
			on Tk1
			goto Bit2
		}
	
		state Bit2 {
			from Bit2
			on Tk1
			goto Bit1
			send Done
		}
	
	}
	
	init {
		send Tk0[P0/first()]
	}

}
